// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// exclusive_lasso_project
arma::vec exclusive_lasso_project(const arma::vec& x, const double& lambda);
RcppExport SEXP _BCEL_exclusive_lasso_project(SEXP xSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const double& >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(exclusive_lasso_project(x, lambda));
    return rcpp_result_gen;
END_RCPP
}
// exclusive_lasso
arma::vec exclusive_lasso(const arma::vec& y, const arma::sp_mat& x, const arma::vec& group, const double& lambda, const int& iter_max, const double& tol);
RcppExport SEXP _BCEL_exclusive_lasso(SEXP ySEXP, SEXP xSEXP, SEXP groupSEXP, SEXP lambdaSEXP, SEXP iter_maxSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type group(groupSEXP);
    Rcpp::traits::input_parameter< const double& >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< const int& >::type iter_max(iter_maxSEXP);
    Rcpp::traits::input_parameter< const double& >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(exclusive_lasso(y, x, group, lambda, iter_max, tol));
    return rcpp_result_gen;
END_RCPP
}
// BiElasso
List BiElasso(const arma::mat& X, int r, const double& lambda_u, const double& lambda_v, const int& iter_max, const double& tol);
RcppExport SEXP _BCEL_BiElasso(SEXP XSEXP, SEXP rSEXP, SEXP lambda_uSEXP, SEXP lambda_vSEXP, SEXP iter_maxSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double& >::type lambda_u(lambda_uSEXP);
    Rcpp::traits::input_parameter< const double& >::type lambda_v(lambda_vSEXP);
    Rcpp::traits::input_parameter< const int& >::type iter_max(iter_maxSEXP);
    Rcpp::traits::input_parameter< const double& >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(BiElasso(X, r, lambda_u, lambda_v, iter_max, tol));
    return rcpp_result_gen;
END_RCPP
}
// BiElasso_bootstrap
List BiElasso_bootstrap(const arma::mat& X, arma::vec& Omega, int r, const double& lambda_u, const double& lambda_v, const int& iter_max, const double& tol);
RcppExport SEXP _BCEL_BiElasso_bootstrap(SEXP XSEXP, SEXP OmegaSEXP, SEXP rSEXP, SEXP lambda_uSEXP, SEXP lambda_vSEXP, SEXP iter_maxSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double& >::type lambda_u(lambda_uSEXP);
    Rcpp::traits::input_parameter< const double& >::type lambda_v(lambda_vSEXP);
    Rcpp::traits::input_parameter< const int& >::type iter_max(iter_maxSEXP);
    Rcpp::traits::input_parameter< const double& >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(BiElasso_bootstrap(X, Omega, r, lambda_u, lambda_v, iter_max, tol));
    return rcpp_result_gen;
END_RCPP
}
// good_sample
arma::vec good_sample(const arma::vec& x, int n, int p, int sample_size, int r);
RcppExport SEXP _BCEL_good_sample(SEXP xSEXP, SEXP nSEXP, SEXP pSEXP, SEXP sample_sizeSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type sample_size(sample_sizeSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(good_sample(x, n, p, sample_size, r));
    return rcpp_result_gen;
END_RCPP
}
// BiElasso_stable
List BiElasso_stable(const arma::mat& X, int r, const double& q_u, const double& q_v, const double& q_upper, const double& select_upper_u, const double& select_upper_v, const double& B1, const double& B2, const double& pi_thr_l, const double& pi_thr_u, const double& size_per, const double& speed, const int& iter_max, const double& tol, int sparse);
RcppExport SEXP _BCEL_BiElasso_stable(SEXP XSEXP, SEXP rSEXP, SEXP q_uSEXP, SEXP q_vSEXP, SEXP q_upperSEXP, SEXP select_upper_uSEXP, SEXP select_upper_vSEXP, SEXP B1SEXP, SEXP B2SEXP, SEXP pi_thr_lSEXP, SEXP pi_thr_uSEXP, SEXP size_perSEXP, SEXP speedSEXP, SEXP iter_maxSEXP, SEXP tolSEXP, SEXP sparseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double& >::type q_u(q_uSEXP);
    Rcpp::traits::input_parameter< const double& >::type q_v(q_vSEXP);
    Rcpp::traits::input_parameter< const double& >::type q_upper(q_upperSEXP);
    Rcpp::traits::input_parameter< const double& >::type select_upper_u(select_upper_uSEXP);
    Rcpp::traits::input_parameter< const double& >::type select_upper_v(select_upper_vSEXP);
    Rcpp::traits::input_parameter< const double& >::type B1(B1SEXP);
    Rcpp::traits::input_parameter< const double& >::type B2(B2SEXP);
    Rcpp::traits::input_parameter< const double& >::type pi_thr_l(pi_thr_lSEXP);
    Rcpp::traits::input_parameter< const double& >::type pi_thr_u(pi_thr_uSEXP);
    Rcpp::traits::input_parameter< const double& >::type size_per(size_perSEXP);
    Rcpp::traits::input_parameter< const double& >::type speed(speedSEXP);
    Rcpp::traits::input_parameter< const int& >::type iter_max(iter_maxSEXP);
    Rcpp::traits::input_parameter< const double& >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type sparse(sparseSEXP);
    rcpp_result_gen = Rcpp::wrap(BiElasso_stable(X, r, q_u, q_v, q_upper, select_upper_u, select_upper_v, B1, B2, pi_thr_l, pi_thr_u, size_per, speed, iter_max, tol, sparse));
    return rcpp_result_gen;
END_RCPP
}
// BiElasso_cv
List BiElasso_cv(const arma::mat& X, arma::vec r_list, const double& q_u, const double& q_v, const double& q_upper, const double& select_upper_u, const double& select_upper_v, const double& B1, const double& B2, const int& cv_k, const double& pi_thr_l, const double& pi_thr_u, const double& size_per, const double& speed, const int& iter_max, const double& tol, int sparse);
RcppExport SEXP _BCEL_BiElasso_cv(SEXP XSEXP, SEXP r_listSEXP, SEXP q_uSEXP, SEXP q_vSEXP, SEXP q_upperSEXP, SEXP select_upper_uSEXP, SEXP select_upper_vSEXP, SEXP B1SEXP, SEXP B2SEXP, SEXP cv_kSEXP, SEXP pi_thr_lSEXP, SEXP pi_thr_uSEXP, SEXP size_perSEXP, SEXP speedSEXP, SEXP iter_maxSEXP, SEXP tolSEXP, SEXP sparseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type r_list(r_listSEXP);
    Rcpp::traits::input_parameter< const double& >::type q_u(q_uSEXP);
    Rcpp::traits::input_parameter< const double& >::type q_v(q_vSEXP);
    Rcpp::traits::input_parameter< const double& >::type q_upper(q_upperSEXP);
    Rcpp::traits::input_parameter< const double& >::type select_upper_u(select_upper_uSEXP);
    Rcpp::traits::input_parameter< const double& >::type select_upper_v(select_upper_vSEXP);
    Rcpp::traits::input_parameter< const double& >::type B1(B1SEXP);
    Rcpp::traits::input_parameter< const double& >::type B2(B2SEXP);
    Rcpp::traits::input_parameter< const int& >::type cv_k(cv_kSEXP);
    Rcpp::traits::input_parameter< const double& >::type pi_thr_l(pi_thr_lSEXP);
    Rcpp::traits::input_parameter< const double& >::type pi_thr_u(pi_thr_uSEXP);
    Rcpp::traits::input_parameter< const double& >::type size_per(size_perSEXP);
    Rcpp::traits::input_parameter< const double& >::type speed(speedSEXP);
    Rcpp::traits::input_parameter< const int& >::type iter_max(iter_maxSEXP);
    Rcpp::traits::input_parameter< const double& >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type sparse(sparseSEXP);
    rcpp_result_gen = Rcpp::wrap(BiElasso_cv(X, r_list, q_u, q_v, q_upper, select_upper_u, select_upper_v, B1, B2, cv_k, pi_thr_l, pi_thr_u, size_per, speed, iter_max, tol, sparse));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BCEL_exclusive_lasso_project", (DL_FUNC) &_BCEL_exclusive_lasso_project, 2},
    {"_BCEL_exclusive_lasso", (DL_FUNC) &_BCEL_exclusive_lasso, 6},
    {"_BCEL_BiElasso", (DL_FUNC) &_BCEL_BiElasso, 6},
    {"_BCEL_BiElasso_bootstrap", (DL_FUNC) &_BCEL_BiElasso_bootstrap, 7},
    {"_BCEL_good_sample", (DL_FUNC) &_BCEL_good_sample, 5},
    {"_BCEL_BiElasso_stable", (DL_FUNC) &_BCEL_BiElasso_stable, 16},
    {"_BCEL_BiElasso_cv", (DL_FUNC) &_BCEL_BiElasso_cv, 17},
    {NULL, NULL, 0}
};

RcppExport void R_init_BCEL(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
